{
  "name": "sf-metadata-backup",
  "description": "Salesforce CLI plugin for metadata backup and rollback with dual-mode support (sf-orgdevmode-builds and standard)",
  "version": "0.1.0",
  "author": "SF Backup Contributors",
  "bugs": "https://github.com/lebarion/sf-metadata-backup/issues",
  "dependencies": {
    "@oclif/core": "^3",
    "@salesforce/core": "^6.4.2",
    "@salesforce/sf-plugins-core": "^7",
    "xml2js": "^0.6.2",
    "chalk": "^4.1.2",
    "cli-progress": "^3.12.0"
  },
  "devDependencies": {
    "@oclif/test": "^3",
    "@salesforce/cli-plugins-testkit": "^5",
    "@salesforce/dev-scripts": "^8",
    "oclif": "^4",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.3"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "files": [
    "/lib",
    "/messages",
    "/npm-shrinkwrap.json",
    "/oclif.lock",
    "/oclif.manifest.json",
    "/scripts"
  ],
  "homepage": "https://github.com/lebarion/sf-metadata-backup",
  "keywords": [
    "salesforce",
    "sfdx",
    "sf",
    "plugin",
    "backup",
    "rollback",
    "metadata",
    "cli"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "oclif": {
    "bin": "sf",
    "commands": "./lib/commands",
    "dirname": "sf-metadata-backup",
    "devPlugins": [
      "@oclif/plugin-help"
    ],
    "flexibleTaxonomy": true,
    "topics": {
      "backup": {
        "description": "Backup and rollback Salesforce metadata"
      }
    },
    "topicSeparator": " "
  },
  "repository": "lebarion/sf-metadata-backup",
  "scripts": {
    "build": "wireit",
    "clean": "sf-clean",
    "clean-all": "sf-clean all",
    "compile": "wireit",
    "docs": "sf-docs",
    "format": "wireit",
    "link-check": "wireit",
    "lint": "wireit",
    "postpack": "sf-clean --ignore-signing-artifacts",
    "prepack": "sf-prepack",
    "prepack_disabled": "sf-prepack",
    "prepare": "sf-install",
    "test": "wireit",
    "test:nuts": "mocha test/nuts/**/*.nut.ts --parallel --timeout 600000",
    "test:only": "wireit",
    "version": "oclif readme"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "compile",
        "lint"
      ]
    },
    "compile": {
      "command": "tsc -p . --pretty --incremental",
      "files": [
        "src/**/*.ts",
        "**/tsconfig.json",
        "messages/**"
      ],
      "output": [
        "lib/**",
        "*.tsbuildinfo"
      ],
      "clean": "if-file-deleted"
    },
    "format": {
      "command": "prettier --write \"+(src|test|schemas)/**/*.+(ts|js|json)|command-snapshot.json\"",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "schemas/**/*.json",
        "command-snapshot.json",
        ".prettier*"
      ],
      "output": []
    },
    "lint": {
      "command": "eslint src test --color --cache --cache-location .eslintcache",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        "messages/**",
        "**/.eslint*",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "link-check": {
      "command": "node -e \"process.exit(process.env.CI ? 0 : 1)\" || linkinator \"**/*.md\" --skip \"CHANGELOG.md|node_modules|test/|confluence.internal.salesforce.com|my.salesforce.com|%s\" --markdown --retry --directory-listing --verbosity error",
      "files": [
        "./*.md",
        "./!(CHANGELOG).md",
        "messages/**/*.md"
      ],
      "output": []
    },
    "test:compile": {
      "command": "tsc -p \"./test\" --pretty",
      "files": [
        "test/**/*.ts",
        "**/tsconfig.json"
      ],
      "output": []
    },
    "test": {
      "dependencies": [
        "test:compile",
        "test:only",
        "test:command-reference",
        "test:deprecation-policy",
        "lint",
        "test:json-schema",
        "link-check"
      ]
    },
    "test:only": {
      "command": "nyc mocha \"test/**/*.test.ts\"",
      "env": {
        "FORCE_COLOR": "2"
      },
      "files": [
        "test/**/*.ts",
        "src/**/*.ts",
        "**/tsconfig.json",
        ".mocha*",
        "!*.nut.ts",
        ".nycrc"
      ],
      "output": []
    },
    "test:command-reference": {
      "command": "\"./bin/dev\" commandreference:generate --erroronwarnings",
      "files": [
        "src/**/*.ts",
        "messages/**",
        "package.json"
      ],
      "output": [
        "tmp/root"
      ]
    },
    "test:deprecation-policy": {
      "command": "\"./bin/dev\" snapshot:compare",
      "files": [
        "src/**/*.ts"
      ],
      "output": [],
      "dependencies": [
        "compile"
      ]
    },
    "test:json-schema": {
      "command": "\"./bin/dev\" schema:compare",
      "files": [
        "src/**/*.ts",
        "schemas"
      ],
      "output": []
    }
  }
}
